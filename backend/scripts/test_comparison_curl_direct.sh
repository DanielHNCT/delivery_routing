#!/bin/bash

# üîç SCRIPT DE COMPARACI√ìN: BACKEND vs CURL DIRECTO
# Este script compara exactamente qu√© env√≠a nuestro backend vs curl directo

set -e

echo "üîç ========================================="
echo "üîç COMPARACI√ìN: BACKEND vs CURL DIRECTO"
echo "üîç ========================================="
echo ""

# üéØ CONFIGURACI√ìN
BASE_URL="http://192.168.1.9:3000"
USERNAME="A187518"
PASSWORD="INTI7518"
SOCIETE="PCP0010699"
MATRICULE="A187518"
DATE="2025-08-28"

echo "üéØ Configuraci√≥n:"
echo "   Username: $USERNAME"
echo "   Societe: $SOCIETE"
echo "   Matricule: $MATRICULE"
echo "   Date: $DATE"
echo ""

# üîê PASO 1: AUTENTICACI√ìN PARA OBTENER TOKEN
echo "üîê PASO 1: Autenticaci√≥n para obtener token..."
echo "   Endpoint: POST $BASE_URL/api/colis-prive/auth"
echo ""

AUTH_RESPONSE=$(curl -s -X POST "$BASE_URL/api/colis-prive/auth" \
  -H "Content-Type: application/json" \
  -d "{
    \"username\": \"$USERNAME\",
    \"password\": \"$PASSWORD\",
    \"societe\": \"$SOCIETE\"
  }")

echo "üì• Respuesta de autenticaci√≥n:"
echo "$AUTH_RESPONSE" | jq '.' 2>/dev/null || echo "$AUTH_RESPONSE"
echo ""

# üîë EXTRAER TOKEN DE LA RESPUESTA
TOKEN=$(echo "$AUTH_RESPONSE" | jq -r '.authentication.token' 2>/dev/null)

if [ "$TOKEN" = "null" ] || [ -z "$TOKEN" ]; then
    echo "‚ùå No se pudo extraer el token de la respuesta"
    exit 1
fi

echo "üîë Token extra√≠do: ${TOKEN:0:50}..."
echo ""

# üöö PASO 2: TEST CON NUESTRO BACKEND
echo "üöö PASO 2: Test con nuestro backend..."
echo "   Endpoint: POST $BASE_URL/api/colis-prive/tournee"
echo ""

BACKEND_RESPONSE=$(curl -s -X POST "$BASE_URL/api/colis-prive/tournee" \
  -H "Content-Type: application/json" \
  -d "{
    \"username\": \"$USERNAME\",
    \"password\": \"$PASSWORD\",
    \"societe\": \"$SOCIETE\",
    \"matricule\": \"$MATRICULE\",
    \"date\": \"$DATE\"
  }")

echo "üì• Respuesta del backend:"
echo "$BACKEND_RESPONSE" | jq '.' 2>/dev/null || echo "$BACKEND_RESPONSE"
echo ""

# üåê PASO 3: TEST CON CURL DIRECTO A COLIS PRIV√â
echo "üåê PASO 3: Test con curl directo a Colis Priv√©..."
echo "   URL: https://wstournee-v2.colisprive.com/WS-TourneeColis/api/getLettreVoitureEco_POST"
echo ""

DIRECT_RESPONSE=$(curl -s -X POST "https://wstournee-v2.colisprive.com/WS-TourneeColis/api/getLettreVoitureEco_POST" \
  -H "Accept: application/json, text/plain, */*" \
  -H "Accept-Encoding: gzip, deflate, br, zstd" \
  -H "Accept-Language: fr-FR,fr;q=0.5" \
  -H "Cache-Control: no-cache" \
  -H "Connection: keep-alive" \
  -H "Content-Type: application/json" \
  -H "Origin: https://gestiontournee.colisprive.com" \
  -H "Referer: https://gestiontournee.colisprive.com/" \
  -H "SsoHopps: $TOKEN" \
  -H "User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36" \
  -H "Sec-Fetch-Dest: empty" \
  -H "Sec-Fetch-Mode: cors" \
  -H "Sec-Fetch-Site: same-site" \
  -H "Sec-GPC: 1" \
  -H "sec-ch-ua: \"Not;A=Brand\";v=\"99\", \"Brave\";v=\"139\", \"Chromium\";v=\"139\"" \
  -H "sec-ch-ua-mobile: ?0" \
  -H "sec-ch-ua-platform: \"macOS\"" \
  -d "{
    \"enumTypeLettreVoiture\": \"ordreScan\",
    \"beanParamsMatriculeDateDebut\": {
      \"Societe\": \"$SOCIETE\",
      \"Matricule\": \"$MATRICULE\",
      \"DateDebut\": \"$DATE\"
    }
  }")

echo "üì• Respuesta directa de Colis Priv√©:"
echo "$DIRECT_RESPONSE" | jq '.' 2>/dev/null || echo "$DIRECT_RESPONSE"
echo ""

# üìä PASO 4: COMPARACI√ìN
echo "üìä ========================================="
echo "üìä COMPARACI√ìN DE RESULTADOS"
echo "üìä ========================================="
echo ""

echo "üîç BACKEND RESPONSE:"
if [ -z "$BACKEND_RESPONSE" ]; then
    echo "   ‚ùå BACKEND: Sin respuesta (posible timeout o error)"
elif echo "$BACKEND_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied"; then
    echo "   ‚ùå BACKEND: 401 Unauthorized"
else
    echo "   ‚úÖ BACKEND: √âxito"
fi

echo ""

echo "üîç CURL DIRECTO RESPONSE:"
if echo "$DIRECT_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied"; then
    echo "   ‚ùå CURL DIRECTO: 401 Unauthorized"
elif echo "$DIRECT_RESPONSE" | grep -q "Index was outside the bounds"; then
    echo "   ‚ö†Ô∏è CURL DIRECTO: Error de array bounds (pero autenticaci√≥n OK)"
else
    echo "   ‚úÖ CURL DIRECTO: √âxito completo"
fi

echo ""

echo "üéØ CONCLUSI√ìN:"
if echo "$BACKEND_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied" && ! echo "$DIRECT_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied"; then
    echo "   üîç PROBLEMA: Nuestro backend est√° enviando algo diferente que causa 401"
    echo "   üìã REVISAR: Logs del backend para ver exactamente qu√© headers/payload env√≠a"
elif ! echo "$BACKEND_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied" && echo "$DIRECT_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied"; then
    echo "   üîç PROBLEMA: CURL directo falla pero nuestro backend funciona"
elif echo "$BACKEND_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied" && echo "$DIRECT_RESPONSE" | grep -q "401\|Unauthorized\|Authorization has been denied"; then
    echo "   üîç PROBLEMA: Ambos fallan - posible problema con el token o la API"
else
    echo "   ‚úÖ AMBOS FUNCIONAN: No hay problema aparente"
fi

echo ""
echo "‚úÖ SCRIPT COMPLETADO - Revisar logs del backend para comparaci√≥n detallada"
