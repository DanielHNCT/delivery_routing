#!/bin/bash

# üß™ Script de prueba para validaci√≥n inteligente de direcciones
# Este script prueba el endpoint de paquetes con validaci√≥n autom√°tica

echo "üîç =========================================="
echo "üîç PRUEBA DE VALIDACI√ìN INTELIGENTE"
echo "üîç =========================================="

# Configuraci√≥n
BASE_URL="http://192.168.1.9:3000"
USERNAME="A187518"
SOCIETE="PCP0010699"
MATRICULE="A187518"
DATE="2025-09-01"

echo ""
echo "üéØ Configuraci√≥n:"
echo " Username: $USERNAME"
echo " Societe: $SOCIETE"
echo " Matricule: $MATRICULE"
echo " Date: $DATE"
echo ""

echo "üîê PASO 1: Autenticaci√≥n..."
AUTH_RESPONSE=$(curl -s -X POST "$BASE_URL/api/colis-prive/auth" \
  -H "Content-Type: application/json" \
  -d "{
    \"username\": \"$USERNAME\",
    \"password\": \"INTI7518\",
    \"societe\": \"$SOCIETE\"
  }")

echo "üì• Respuesta de autenticaci√≥n:"
echo "$AUTH_RESPONSE" | jq '.'

# Extraer token si est√° disponible
TOKEN=$(echo "$AUTH_RESPONSE" | jq -r '.authentication.token // empty')

if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
    echo "‚ùå No se pudo obtener el token de autenticaci√≥n"
    exit 1
fi

echo ""
echo "üîë Token extra√≠do: ${TOKEN:0:50}..."

echo ""
echo "üöö PASO 2: Obtener paquetes con validaci√≥n inteligente..."
PACKAGES_RESPONSE=$(curl -s -X POST "$BASE_URL/api/colis-prive/packages" \
  -H "Content-Type: application/json" \
  -d "{
    \"matricule\": \"$MATRICULE\",
    \"date\": \"$DATE\"
  }")

echo "üì• Respuesta de paquetes:"
echo "$PACKAGES_RESPONSE" | jq '.'

echo ""
echo "üìä =========================================="
echo "üìä AN√ÅLISIS DE VALIDACI√ìN"
echo "üìä =========================================="

# Extraer informaci√≥n de validaci√≥n
VALIDATION_INFO=$(echo "$PACKAGES_RESPONSE" | jq '.address_validation // empty')

if [ -n "$VALIDATION_INFO" ] && [ "$VALIDATION_INFO" != "null" ]; then
    echo "‚úÖ Validaci√≥n de direcciones disponible:"
    echo "$VALIDATION_INFO" | jq '.'
    
    # Estad√≠sticas
    TOTAL=$(echo "$VALIDATION_INFO" | jq '.total_packages // 0')
    AUTO_VALIDATED=$(echo "$VALIDATION_INFO" | jq '.auto_validated // 0')
    CLEANED_AUTO=$(echo "$VALIDATION_INFO" | jq '.cleaned_auto // 0')
    COMPLETED_AUTO=$(echo "$VALIDATION_INFO" | jq '.completed_auto // 0')
    PARTIAL_FOUND=$(echo "$VALIDATION_INFO" | jq '.partial_found // 0')
    REQUIRES_MANUAL=$(echo "$VALIDATION_INFO" | jq '.requires_manual // 0')
    
    echo ""
    echo "üìà ESTAD√çSTICAS DE VALIDACI√ìN:"
    echo " Total de paquetes: $TOTAL"
    echo " ‚úÖ Auto-validados (original): $AUTO_VALIDATED"
    echo " üßπ Limpiados autom√°ticamente: $CLEANED_AUTO"
    echo " üè¢ Completados con sector: $COMPLETED_AUTO"
    echo " üîç Encontrados por b√∫squeda parcial: $PARTIAL_FOUND"
    echo " ‚ùå Requieren intervenci√≥n manual: $REQUIRES_MANUAL"
    
    # Calcular porcentaje de √©xito
    if [ "$TOTAL" -gt 0 ]; then
        SUCCESS_COUNT=$((AUTO_VALIDATED + CLEANED_AUTO + COMPLETED_AUTO + PARTIAL_FOUND))
        SUCCESS_PERCENTAGE=$((SUCCESS_COUNT * 100 / TOTAL))
        echo ""
        echo "üéØ TASA DE √âXITO: $SUCCESS_PERCENTAGE% ($SUCCESS_COUNT/$TOTAL)"
    fi
    
    # Mostrar warnings si existen
    WARNINGS=$(echo "$VALIDATION_INFO" | jq '.warnings // []')
    if [ "$(echo "$WARNINGS" | jq 'length')" -gt 0 ]; then
        echo ""
        echo "‚ö†Ô∏è WARNINGS:"
        echo "$WARNINGS" | jq -r '.[]'
    fi
else
    echo "‚ö†Ô∏è No hay informaci√≥n de validaci√≥n disponible"
fi

echo ""
echo "üì¶ =========================================="
echo "üì¶ MUESTRA DE PAQUETES VALIDADOS"
echo "üì¶ =========================================="

# Mostrar algunos paquetes con sus coordenadas
PACKAGES=$(echo "$PACKAGES_RESPONSE" | jq '.packages // []')
if [ "$(echo "$PACKAGES" | jq 'length')" -gt 0 ]; then
    echo "Mostrando primeros 3 paquetes con informaci√≥n de validaci√≥n:"
    echo "$PACKAGES" | jq '.[0:3] | .[] | {
        id: .id,
        tracking_number: .tracking_number,
        recipient_name: .recipient_name,
        address: .address,
        latitude: .latitude,
        longitude: .longitude,
        formatted_address: .formatted_address,
        validation_method: .validation_method,
        validation_confidence: .validation_confidence,
        validation_warnings: .validation_warnings
    }'
else
    echo "No hay paquetes disponibles"
fi

echo ""
echo "‚úÖ SCRIPT COMPLETADO"
echo "=========================================="
